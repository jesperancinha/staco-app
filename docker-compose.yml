services:

  postgres:
    hostname: postgres
    image: postgres:15
    volumes:
      - ./docker-images/docker-psql:/docker-entrypoint-initdb.d
      - ./docker-images/docker-psql/multiple:/docker-entrypoint-initdb.d/multiple
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=staco
    expose:
      - "5432"
    deploy:
      resources:
        limits:
          memory: 600M
        reservations:
          memory: 600M
    networks:
      - staco-net

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:1.3.0
    hostname: localstack
    env_file:
      - .env
    expose:
      - 4566
    environment:
      - SERVICES=${SERVICES}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PORT_WEB_UI=8090
      - DEFAULT_REGION=eu-central-1
      - DATA_DIR=/var/lib/localstack/data
      - LAMBDA_EXECUTOR=local
      - START_WEB=1
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - HOSTNAME_EXTERNAL=localstack
    healthcheck:
      test: [ "CMD", "/usr/bin/curl", "http://localhost:4566/_localstack/health" ]
    deploy:
      resources:
        limits:
          memory: 600M
    networks:
      - staco-net

  aws-cli-1:
    image: amazon/aws-cli:2.9.6
    hostname: aws-cli-1
    command: ssm --endpoint-url http://localstack:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/postgres/username --value postgres --type text
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - staco-net

  aws-cli-2:
    image: amazon/aws-cli:2.9.6
    hostname: aws-cli-2
    command: ssm --endpoint-url http://localstack:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/postgres/password --value admin --type text
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - staco-net

  aws-cli-3:
    image: amazon/aws-cli:2.9.6
    hostname: aws-cli-3
    command: s3api --endpoint-url http://localstack:${STACO_AWS_LOCALSTACK_PORT} create-bucket --bucket stacos --create-bucket-configuration LocationConstraint=eu-central-1
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - staco-net

  aws-cli-4:
    image: amazon/aws-cli:2.9.6
    hostname: aws-cli-4
    command: s3api --endpoint-url http://localstack:${STACO_AWS_LOCALSTACK_PORT} create-bucket --bucket images --create-bucket-configuration LocationConstraint=eu-central-1
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - staco-net

  aws-cli-5:
    image: amazon/aws-cli:2.9.6
    hostname: aws-cli-5
    command: ssm --endpoint-url http://localstack:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/staco/app/user/name --value admin --type text
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - staco-net

  aws-cli-6:
    image: amazon/aws-cli:2.9.6
    hostname: aws-cli-6
    command: ssm --endpoint-url http://localstack:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/staco/app/user/password --value admin --type text
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - staco-net

  staco-app-service-reactive:
    hostname: staco-app-service-reactive
    build:
      context: stamps-and-coins-service/.
    expose:
      - 8081
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_APP_BACKEND_PROFILE=${STACO_APP_BACKEND_PROFILE}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    #    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 600M
    networks:
      - staco-net
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:8081"]
      interval: 5s
      timeout: 240s
      retries: 60

  staco-app-service-localstack:
    hostname: staco-app-service-localstack
    build:
      context: stamps-and-coins-ls-service/.
    expose:
      - 8082
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_APP_BACKEND_PROFILE=${STACO_APP_BACKEND_PROFILE}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    #    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 600M
    networks:
      - staco-net
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      aws-cli-1:
        condition: service_completed_successfully
      aws-cli-2:
        condition: service_completed_successfully
      aws-cli-3:
        condition: service_completed_successfully
      aws-cli-4:
        condition: service_completed_successfully
      aws-cli-5:
        condition: service_completed_successfully
      aws-cli-6:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:8082"]
      interval: 5s
      timeout: 240s
      retries: 60

  staco-app-batch:
    hostname: staco-app-batch
    env_file:
      - .env
    build:
      context: stamps-and-coins-batch/.
    expose:
      - 8083
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_APP_BACKEND_PROFILE=${STACO_APP_BACKEND_PROFILE}
      - STACO_AWS_LOCALSTACK_IP=localstack
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    #    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 600M
    networks:
      - staco-net
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
      aws-cli-1:
        condition: service_completed_successfully
      aws-cli-2:
        condition: service_completed_successfully
      aws-cli-3:
        condition: service_completed_successfully
      aws-cli-4:
        condition: service_completed_successfully
      aws-cli-5:
        condition: service_completed_successfully
      aws-cli-6:
        condition: service_completed_successfully

  nginx:
    hostname: nginx
    build:
      context: ./stamps-and-coins-web/.
    #    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 600M
    env_file:
      - .env
    networks:
      - staco-net
    depends_on:
      staco-app-service-reactive:
        condition: service_healthy
      staco-app-service-localstack:
        condition: service_healthy

networks:
  staco-net:
